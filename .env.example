# !! Core Discord application settings

# Discord bot token; requires MESSAGE_CONTENT intent, see: [link to be added later]
DISCORD_TOKEN=MTAzMDQ2NzEyMzQ1Njc4OTAyNDU2Nzgw.THIS_IS_NOT-A_REAL_TOKEN.VvE5Rhe_i-BKp9G97LPJZn5aBr4

APPLICATION_ID=123456789012345678

# !! Environment context

# Specify the Node environment context that Pathways should be running in.
## Usually, env#NODE_ENV is either one of PRODUCTION, DEVELOPMENT, or STAGING.
NODE_ENV=DEVELOPMENT

# These keys are used for developer mode and debugging. These keys are only used when env#NODE_ENV is set to DEVELOPMENT.
## Commands and actions will be directly deployed to this guild.
DEV_GUILD=123456789012345678
## This snowflake responds to a role that the bot will use as a gatekeeper for development-only commands.
DEV_UNLOCK_ROLE=123456789012345678

# This token corresponds to a GitHub fine-grained PAT. Preferably, the PAT should belong to a bot account.
## (This is only reuqired when using certain CI tools and dev-scripts, i.e. release-it.)
GITHUB_TOKEN=

# !! Database (k/V)

# A Valkey (Redis OSS)-compatible key/value store is required to run Pathways.
## Although Dragonfly uses the BSL, it is currently the only Redis-compatible k/V store that supports JSON.
## Dragonfly has decent corporate goodwill and the BSL changes to OSS after 4 years. As such, we use it.
KV_URI=redis://127.0.0.1:6379

# !! Model activation settings

# Select a mode for model activation.
## WHITELIST only allows channels specified in ACTIVATION_LIST.
## BLACKLIST allows all channels other than those specified in ACTIVATION_LIST.
ACTIVATION_MODE=WHITELIST

# A comma-separated list of channel IDs. Read env#ACTIVATION_MODE for more information.
ACTIVATION_CHANNEL_SETLIST=123456789012345678

# !! Model settings

# Workers AI: Specify a Cloudflare account ID and token for use with Workers AI.
## SAFETY WARNING: Scope your API token to only be accessible with Workers AI.
CLOUDFLARE_ACCOUNT_ID=abcdef1234567890abcdef1234567890

CLOUDFLARE_ACCOUNT_TOKEN=v1.0-abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890

# OpenAI API: Specify an OpenAI account token for use with the OpenAI API.
OPENAI_ACCOUNT_TOKEN=sk-proj-abcdef1234567890abcdef1234567890

# OpenRouter API: Specify an OpenRouter account token for use with the OpenAI-compatible OpenRouter API.
OPENROUTER_ACCOUNT_TOKEN=sk-or-v1-abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890

# The following variables specify instruction sets and configuration for the various models in Pathways.

# Integration Caller: When using "cs.spongedsc.integrations", specify the provider and model to use for integration calls.
## CALLER_PROVIDER should be one of OPENAI, OPENROUTER, or WORKERS.
CALLER_PROVIDER=OPENROUTER
## CALLER_MODEL should be the model ID used by your chosen caller provider.
CALLER_MODEL=openai/gpt-4o-mini

## Generic Model: Specify the provider and model to use for integration calls.
### CALLER_PROVIDER should be one of OPENAI, OPENROUTER, or WORKERS.
GM_PROVIDER=OPENROUTER
### CALLER_MODEL should be the model ID used by your chosen caller provider.
GM_MODEL=openai/gpt-4o-mini

## The value of the variable should correspond to the key of its' responding configuration in modelConstants.js.
MODEL_LLM_PRESET=default

## Callsystems are used to call functions during passive activation.
### Legacy is the older function system. While it only supports image generation, it does not require additional models other than the base text model. This is also the fallback system used when Integrations fails.
### To use Legacy, specify "cs.spongedsc.legacy".
MODEL_LLM_CALLSYSTEM=cs.spongedsc.legacy
## If callsystem versioning is enabled, specify the version of the callsystem to use. Use `latest` to use the latest version.
MODEL_LLM_CALLSYSTEM_VERSION=latest

# !! Memory-viewer (pathways-web)
# Used to display logs of memories for users
## You'll need to host your own version of https://github.com/spongedsc/pathways-web, and use the same key here.
## The host should NOT have a trailing slash.
WEB_HOST=
WEB_KEY=
